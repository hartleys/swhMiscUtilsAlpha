#!/usr/bin/env python
from __future__ import print_function

import sys,gzip,errno,time,random,collections,re

def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

#+SHORTDESC="works like cut -f, but uses the column order given by the input"
#+ HELPTEXT="ordcut -f1,4-5,7,9- file.txt"$'\n'
#++HELPTEXT="cat file.txt | ordcut -f1,4-5,7   -"$'\n'
#+ SYNTAXTEXT="vcf2table.py [options] myVcf.vcf.gz"$'\n'
#+ PARAMS="--help: displays syntax and help info."$'\n'
#++PARAMS="--man: synonym for --help."$'\n'
#+ VERSION="0.0.5"

args = sys.argv;

if args[-1] == "-":
   args.pop(-1)
   inf = sys.stdin;
   isStream = True;
else:
   inf = args.pop(-1);
   isStream = False;

if not isStream:
   if inf[-3:] == ".gz":
      inf = gzip.open(inf,'r');
   else:
      inf = open(inf,'r');

if not args[1].startswith("-f"): 
   eprint("ERROR: first arg must be -f...");
   exit(1);

colDescRaw = args[1][2:].split(",");
colDescs = [];
for cdr in colDescRaw:
   if cdr[0] == "-":
       try:
          colDescs.append( [0,int( cdr[1:] )] )
       except ValueError:
          eprint("ERROR: string \""+cdr[1:]+"\" is not an integer");
          exit(1)
   elif cdr[-1] == "-":
       try:
           colDescs.append( [1,int( cdr[:-1] )-1] )
       except ValueError:
          eprint("ERROR: string \""+cdr[:-1]+"\" is not an integer");
          exit(1)
   elif "-" in cdr:
       try:
           cdrs = cdr.split("-");
           colDescs.append( [2,int(cdrs[0])-1,int(cdrs[1])] )
       except ValueError:
          eprint("ERROR: string \""+cdrs[0]+"\" or \""+cdrs[1]+"\" is not an integer");
          exit(1)
   else:
       try:
           colDescs.append( [3,int( cdr )-1] )
       except ValueError:
          eprint("ERROR: string \""+cdr+"\" is not an integer");
          exit(1)


out = sys.stdout;

try:
   for line in inf:
       cells = line[:-1].split("\t");
       outcells = [];
       for cdr in colDescs:
           if cdr[0] == 0:
               b = cdr[1];
               outcells = outcells + cells[:b]
           elif cdr[0] == 1:
               a = cdr[1];               
               outcells = outcells + cells[a:]
           elif cdr[0] == 2:
               a = cdr[1];
               b = cdr[2];       
               outcells = outcells + cells[a:b]
           else:
               outcells.append(cells[cdr[1]])
       out.write( "\t".join(outcells) + "\n" );
except IOError as e:
   if e.errno == errno.EPIPE:
      exit(0);

out.close();
